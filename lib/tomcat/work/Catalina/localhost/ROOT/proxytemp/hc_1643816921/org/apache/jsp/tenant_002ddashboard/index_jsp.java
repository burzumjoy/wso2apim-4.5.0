/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.94
 * Generated at: 2025-07-24 20:33:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tenant_002ddashboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.utils.ServerConstants;
import org.wso2.carbon.ui.CarbonUIUtil;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1741069184000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1741069184000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIUtil");
    _jspx_imports_classes.add("org.wso2.carbon.utils.ServerConstants");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write(" ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n");
      out.write(" ~\n");
      out.write(" ~ WSO2 Inc. licenses this file to you under the Apache License,\n");
      out.write(" ~ Version 2.0 (the \"License\"); you may not use this file except\n");
      out.write(" ~ in compliance with the License.\n");
      out.write(" ~ You may obtain a copy of the License at\n");
      out.write(" ~\n");
      out.write(" ~    http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write(" ~\n");
      out.write(" ~ Unless required by applicable law or agreed to in writing,\n");
      out.write(" ~ software distributed under the License is distributed on an\n");
      out.write(" ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n");
      out.write(" ~ KIND, either express or implied.  See the License for the\n");
      out.write(" ~ specific language governing permissions and limitations\n");
      out.write(" ~ under the License.\n");
      out.write(" -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<link href=\"../tenant-dashboard/css/dashboard-common.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\"/>\n");

        Object param = session.getAttribute("authenticated");
        String passwordExpires = (String) session.getAttribute(ServerConstants.PASSWORD_EXPIRATION);
        boolean hasModMgtPermission = CarbonUIUtil.isUserAuthorized(request,
		"/permission/admin/manage/add/module");
        boolean hasServiceMgtPermission = CarbonUIUtil.isUserAuthorized(request, "/permission/admin/manage/add/service");
        boolean hasWebAppMgtPermission = CarbonUIUtil.isUserAuthorized(request,"/permission/admin/manage/manage/webapp");
        boolean loggedIn = false;
        if (param != null) {
            loggedIn = (Boolean) param;             
        } 

      out.write("\n");
      out.write("  \n");
      out.write("<div id=\"passwordExpire\">\n");
      out.write("         ");

         if (loggedIn && passwordExpires != null) {
         
      out.write("\n");
      out.write("              <div class=\"info-box\"><p>Your password expires at ");
      out.print(passwordExpires);
      out.write(". Please change by visiting <a href=\"../user/change-passwd.jsp?isUserChange=true&returnPath=../admin/index.jsp\">here</a></p></div>\n");
      out.write("         ");

             }
         
      out.write("\n");
      out.write("</div>\n");
      out.write("<div id=\"middle\">\n");
      out.write("<div id=\"workArea\">\n");
      out.write("<style type=\"text/css\">\n");
      out.write("    \n");
      out.write("\n");
      out.write("    .tip-table td.web-applications {\n");
      out.write("        background-image: url(../../carbon/tenant-dashboard/images/web-applications.png);\n");
      out.write("    }\n");
      out.write("    .tip-table td.service-testing {\n");
      out.write("        background-image: url(../../carbon/tenant-dashboard/images/service-testing.png);\n");
      out.write("    }\n");
      out.write("    .tip-table td.message-tracing {\n");
      out.write("        background-image: url(../../carbon/tenant-dashboard/images/message-tracing.png);\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("</style>\n");
      out.write(" <h2 class=\"dashboard-title\">WSO2 API Manager quick start dashboard</h2>\n");
      out.write("        <table class=\"tip-table\">\n");
      out.write("            <tr>\n");
      out.write("                <td class=\"tip-top web-applications\"></td>\n");
      out.write("                <td class=\"tip-empty \"></td>\n");
      out.write("                <td class=\"tip-top service-testing\"></td>\n");
      out.write("                <td class=\"tip-empty \"></td>\n");
      out.write("                <td class=\"tip-top message-tracing\"></td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                \n");
      out.write("                <td class=\"tip-content\">\n");
      out.write("                    <div class=\"tip-content-lifter\">\n");
      out.write("                          ");

							if (hasWebAppMgtPermission) {
						
      out.write("\n");
      out.write("                        <a class=\"tip-title\" href=\"../webapp-list/index.jsp?region=region1&item=webapps_list_menu\">Web Applications</a> <br />\n");
      out.write("						");

							} else {
						
      out.write("\n");
      out.write("				      <h3>Web Applications</h3> <br />\n");
      out.write("				        ");

							}
						
      out.write("\n");
      out.write("                        <p>Web Application hosting features in API Manager supports deployment of Jaggery Applications. Deployed Webapps can be easily managed using the Webapp management facilities available in the management console.</p>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </td>\n");
      out.write("                <td class=\"tip-empty\"></td>\n");
      out.write("                <td class=\"tip-content\">\n");
      out.write("                    <div class=\"tip-content-lifter\">\n");
      out.write("                         ");

							if (hasServiceMgtPermission) {
						
      out.write("\n");
      out.write("                        <a class=\"tip-title\" href=\"../tryit/index.jsp?region=region5&item=tryit\">Service Testing</a> <br/>\n");
      out.write("						");

							} else {
						
      out.write("\n");
      out.write("                       <h3>Service Testing</h3> <br/>\n");
      out.write("                        ");

							}
						
      out.write("\n");
      out.write("                        <p>Tryit tool can be used as a simple Web Service client which can be used to try your services within Server itself.</p>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </td>\n");
      out.write("                <td class=\"tip-empty\"></td>\n");
      out.write("                <td class=\"tip-content\">\n");
      out.write("                    <div class=\"tip-content-lifter\">\n");
      out.write("                          ");

							if (hasServiceMgtPermission) {
						
      out.write("\n");
      out.write("                        <a class=\"tip-title\"  href=\"../tracer/index.jsp?region=region4&item=tracer_menu\">Message Tracing</a> <br/>\n");
      out.write("						");

							} else {
						
      out.write("\n");
      out.write("						<h3>Message Tracing</h3> <br/>\n");
      out.write("						");

							}
						
      out.write("\n");
      out.write("                        <p>Trace the request and responses to your service. Message Tracing is a vital debugging tool when you have clients from heterogeneous platforms.</p>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td class=\"tip-bottom\"></td>\n");
      out.write("                <td class=\"tip-empty\"></td>\n");
      out.write("                <td class=\"tip-bottom\"></td>\n");
      out.write("                <td class=\"tip-empty\"></td>\n");
      out.write("                <td class=\"tip-bottom\"></td>\n");
      out.write("                <td class=\"tip-empty\"></td>\n");
      out.write("                <td class=\"tip-bottom\"></td>\n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("\n");
      out.write("<p>\n");
      out.write("    <br/>\n");
      out.write("</p> </div>\n");
      out.write("</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
