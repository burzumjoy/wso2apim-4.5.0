/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.94
 * Generated at: 2025-07-24 19:55:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.relations;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.registry.relations.ui.clients.RelationServiceClient;
import org.wso2.carbon.ui.CarbonUIMessage;
import org.wso2.carbon.utils.ServerConstants;
import org.wso2.carbon.registry.relations.stub.beans.xsd.DependenciesBean;
import org.wso2.carbon.registry.relations.stub.beans.xsd.AssociationBean;
import org.wso2.carbon.registry.common.ui.utils.UIUtil;
import org.wso2.carbon.registry.core.utils.RegistryUtils;
import org.wso2.carbon.registry.core.RegistryConstants;
import java.util.List;
import java.util.LinkedList;
import java.net.URLEncoder;

public final class association_002dlist_002dajaxprocessor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1741069184000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1741069184000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(15);
    _jspx_imports_classes.add("org.wso2.carbon.registry.relations.stub.beans.xsd.DependenciesBean");
    _jspx_imports_classes.add("org.wso2.carbon.registry.core.RegistryConstants");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("org.wso2.carbon.registry.relations.ui.clients.RelationServiceClient");
    _jspx_imports_classes.add("org.wso2.carbon.registry.core.utils.RegistryUtils");
    _jspx_imports_classes.add("org.wso2.carbon.registry.relations.stub.beans.xsd.AssociationBean");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIMessage");
    _jspx_imports_classes.add("org.wso2.carbon.registry.common.ui.utils.UIUtil");
    _jspx_imports_classes.add("org.wso2.carbon.utils.ServerConstants");
    _jspx_imports_classes.add("java.util.LinkedList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../registry_common/registry_common-i18n-ajaxprocessor.jsp", out, false);
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"../registry_common/js/registry_validation.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../registry_common/js/registry_common.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../ajax/js/prototype.js\"></script>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../relations/relations-i18n-ajaxprocessor.jsp", out, false);
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"../relations/js/relations.js\"></script>\n");
      out.write("\n");

    String cookie = (String) session.getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
    RelationServiceClient client = new RelationServiceClient(cookie, config, session);
    DependenciesBean bean;
    try {
        if (request.getParameter("todo") != null) {
            client.addAssociation(request);
        }
        bean = client.getDependencies(request);
    } catch (Exception e) {
        response.setStatus(500);
        CarbonUIMessage uiMsg = new CarbonUIMessage(CarbonUIMessage.ERROR, e.getMessage(), e);
        response.setStatus(500);

      out.print(e.getMessage());

        return;
    }

      out.write('\n');
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      boolean _jspx_th_fmt_005fbundle_005f0_reused = false;
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /relations/association-list-ajaxprocessor.jsp(57,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.registry.relations.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fbundle_005f0);
          }
          do {
            out.write('\n');

    String type = request.getParameter("type");
    AssociationBean[] depList = bean.getAssociationBeans();
    AssociationBean[] assoList = bean.getAssociationBeans();

    int count = 0;

    boolean hasAssociations = false;
    boolean hasDependencies = false;

    for (int i = 0; i < depList.length; i++) {
        AssociationBean association = depList[i];
        if (association.getSourcePath().equals(bean.getPathWithVersion()) && association.getAssociationType().equals("depends"))
            hasDependencies = true;
        if (association.getSourcePath().equals(bean.getPathWithVersion()) && !association.getAssociationType().equals("depends"))
            hasAssociations = true;
    }

    if (type != null && type.equals("depends")) {
        List<AssociationBean> beansList = new LinkedList<AssociationBean>();
        for (int i = 0; i < depList.length; i++) {
            AssociationBean association = depList[i];
            if (association.getSourcePath().equals(bean.getPathWithVersion()) && association.getAssociationType().equals("depends")) {
                beansList.add(association);
            }
        }
        count = beansList.size();
        depList = beansList.toArray(new AssociationBean[count]);


            out.write("\n");
            out.write("<div id=\"dependenciesSum\" class=\"summeryStyle\">\n");
            out.write("    ");
 if (count > 1) { 
            out.write("\n");
            out.write("    ");
            out.print(count);
            out.write(" dependencies\n");
            out.write("    ");

    } else if (count == 1) {
    
            out.write("\n");
            out.write("    ");
            out.print(count);
            out.write(" dependency\n");
            out.write("    ");

    } else if (count == 0) {
    
            out.write("\n");
            out.write("    No dependencies on this entry yet.\n");
            out.write("    ");

        }
        count = 0;
    
            out.write("\n");
            out.write("</div>\n");
            out.write("\n");
            out.write("<div id=\"dependenciesList\">\n");
            out.write("    ");
 if (hasDependencies == true) { 
            out.write("\n");
            out.write("    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:100%;\" class=\"styledLeft\">\n");
            out.write("        <thead>\n");
            out.write("            <tr>\n");
            out.write("                <th align=\"left\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </th>\n");
            out.write("                ");
 if (bean.getLoggedIn() && bean.getPutAllowed() && !bean.getVersionView()) { 
            out.write("\n");
            out.write("                <th style=\"width:90px;\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </th>\n");
            out.write("                ");
 } 
            out.write("\n");
            out.write("            </tr>\n");
            out.write("        </thead>\n");
            out.write("        <tbody>\n");
            out.write("\n");
            out.write("            ");

                int pageNumber;
                String pageStr = request.getParameter("page");
                if (pageStr != null) {
                    pageNumber = Integer.parseInt(pageStr);
                } else {
                    pageNumber = 1;
                }
                int itemsPerPage = (int)(RegistryConstants.ITEMS_PER_PAGE * 0.7);
                int numberOfPages;
                if (depList.length % itemsPerPage == 0) {
                    numberOfPages = depList.length / itemsPerPage;
                } else {
                    numberOfPages = depList.length / itemsPerPage + 1;
                }
                for(int i=(pageNumber - 1) * itemsPerPage;i<pageNumber * itemsPerPage && i<depList.length;i++) {
                    AssociationBean association = depList[i];
            
            out.write("\n");
            out.write("            <tr>\n");
            out.write("                <td>\n");
            out.write("                    ");
 String destPath = association.getDestinationPath();
                        String destLink = destPath;
                        String destPathSmall;
                        if (!destPath.startsWith("http://") && !destPath.startsWith("https://")) {
                            String temp = destPath;
                            try {
                                temp = URLEncoder.encode(destPath, "UTF-8");
                            } catch (Exception ignore) {}
                            destLink = "../resources/resource.jsp?region=region3&item=resource_browser_menu&viewType=std&path=" + temp;
                            destPathSmall = RegistryUtils.getResourceName(destPath);
                            if (destPathSmall == null) {
                                destPathSmall = destPath;
                            }
                        } else {
                            destPathSmall = destPath;
                        }
                        // The dependencies portlet has more space compared to the associations
                        // portlet. Therefore, we allow up to 24, instead of 14.
                        if (destPathSmall.length() >= 32) {
                            destPathSmall = destPathSmall.substring(0, 32) + "..";
                        }
                    
            out.write("\n");
            out.write("                    <a ");
if (destPath.startsWith("http://") || destPath.startsWith("https://")) {
            out.write("target=\"_blank\"");
}
            out.write(" href=\"");
            out.print(destLink);
            out.write("\" title=\"");
            out.print(destPath);
            out.write('"');
            out.write('>');
            out.print(destPathSmall);
            out.write("\n");
            out.write("                    </a>\n");
            out.write("                </td>\n");
            out.write("                ");
 if (bean.getLoggedIn() && bean.getPutAllowed() && !bean.getVersionView()) { 
            out.write("\n");
            out.write("                <td style=\"width:10px;\" align=\"left\">\n");
            out.write("                    <a class=\"icon-link registryWriteOperation\" style=\"background-image:url(../admin/images/delete.gif);\"\n");
            out.write("                       onclick=\"removeAssociation('");
            out.print(bean.getPathWithVersion());
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(destPath);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(association.getAssociationType());
            out.write("','dependenciesDiv');\">\n");
            out.write("                        ");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                    </a>\n");
            out.write("                </td>\n");
            out.write("                ");
 } 
            out.write("\n");
            out.write("            </tr>\n");
            out.write("\n");
            out.write("            ");

                }


            
            out.write("\n");
            out.write("            <tr>\n");
            out.write("                    ");
            out.write("\n");
            out.write("                <td align=\"left\" colspan=\"2\" style=\"height:0px;border-bottom:0px;\">\n");
            out.write("                </td>\n");
            out.write("            </tr>\n");
            out.write("        </tbody>\n");
            out.write("    </table>\n");
            out.write("    <table width=\"100%\" style=\"text-align:center; padding-top: 10px; margin-bottom: -10px\">\n");
            out.write("        ");
            //  carbon:resourcePaginator
            org.wso2.carbon.ui.taglibs.ResourcePaginator _jspx_th_carbon_005fresourcePaginator_005f0 = (org.wso2.carbon.ui.taglibs.ResourcePaginator) _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody.get(org.wso2.carbon.ui.taglibs.ResourcePaginator.class);
            boolean _jspx_th_carbon_005fresourcePaginator_005f0_reused = false;
            try {
              _jspx_th_carbon_005fresourcePaginator_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fresourcePaginator_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setPageNumber(pageNumber);
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setNumberOfPages(numberOfPages);
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setResourceBundle("org.wso2.carbon.registry.relations.ui.i18n.Resources");
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = nextKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setNextKey("next");
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = prevKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setPrevKey("prev");
              // /relations/association-list-ajaxprocessor.jsp(190,8) name = paginationFunction type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f0.setPaginationFunction("loadAssociationDiv('" + request.getParameter("path").replaceAll("&","%26") + "', '" + request.getParameter("type") + "', {0})");
              int _jspx_eval_carbon_005fresourcePaginator_005f0 = _jspx_th_carbon_005fresourcePaginator_005f0.doStartTag();
              if (_jspx_th_carbon_005fresourcePaginator_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody.reuse(_jspx_th_carbon_005fresourcePaginator_005f0);
              _jspx_th_carbon_005fresourcePaginator_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fresourcePaginator_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fresourcePaginator_005f0_reused);
            }
            out.write("\n");
            out.write("    </table>\n");
            out.write("\n");
            out.write("    <div style=\"height:30px;\">\n");
            out.write("        <a class=\"icon-link\"\n");
            out.write("           style=\"background-image:url(../relations/images/dep-tree.gif);padding-left:30px;height:30px;margin-top:5px;\"\n");
            out.write("           onclick=\"showAssociationTree('depends', '");
            out.print(bean.getPathWithVersion());
            out.write("')\">\n");
            out.write("            ");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("        </a>\n");
            out.write("    </div>\n");
            out.write("</div>\n");
 } 
            out.write("\n");
            out.write("</div>\n");
 }


    if (type == null || !type.equals("depends")) {
        List<AssociationBean> beansList = new LinkedList<AssociationBean>();
        for (int i = 0; i < assoList.length; i++) {
            AssociationBean association = assoList[i];
            if (association.getSourcePath().equals(bean.getPathWithVersion()) && !association.getAssociationType().equals("depends")) {
                beansList.add(association);
            }
        }
        count = beansList.size();
        assoList = beansList.toArray(new AssociationBean[count]);

            out.write("\n");
            out.write("<div id=\"associationsSum\" class=\"summeryStyle\">\n");
            out.write("    ");
 if (count > 1) { 
            out.write("\n");
            out.write("    ");
            out.print(count);
            out.write(" associations\n");
            out.write("    ");

    } else if (count == 1) {
    
            out.write("\n");
            out.write("    ");
            out.print(count);
            out.write(" association\n");
            out.write("    ");

    } else if (count == 0) {
    
            out.write("\n");
            out.write("    No associations on this entry yet.\n");
            out.write("    ");

        }
        count = 0;
    
            out.write("\n");
            out.write("</div>\n");
            out.write("<div id=\"associationsList\">\n");
            out.write("    ");
 if (hasAssociations == true) { 
            out.write("\n");
            out.write("    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:100%;\" class=\"styledLeft\">\n");
            out.write("        <thead>\n");
            out.write("            <tr>\n");
            out.write("                <th align=\"left\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </th>\n");
            out.write("                <th align=\"left\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </th>\n");
            out.write("                ");
 if (bean.getLoggedIn() && bean.getPutAllowed() && !bean.getVersionView()) { 
            out.write("\n");
            out.write("                <th align=\"left\" style=\"width:90px;\">\n");
            out.write("                    ");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                </th>\n");
            out.write("                ");
 } 
            out.write("\n");
            out.write("            </tr>\n");
            out.write("        </thead>\n");
            out.write("        <tbody>\n");
            out.write("            ");

                int pageNumber;
                String pageStr = request.getParameter("page");
                if (pageStr != null) {
                    pageNumber = Integer.parseInt(pageStr);
                } else {
                    pageNumber = 1;
                }
                int itemsPerPage = (int)(RegistryConstants.ITEMS_PER_PAGE * 0.7);
                int numberOfPages;
                if (assoList.length % itemsPerPage == 0) {
                    numberOfPages = assoList.length / itemsPerPage;
                } else {
                    numberOfPages = assoList.length / itemsPerPage + 1;
                }
                for(int i=(pageNumber - 1) * itemsPerPage;i<pageNumber * itemsPerPage && i<assoList.length;i++) {
                    AssociationBean association = assoList[i];
                    if (association.getSourcePath().equals(bean.getPathWithVersion()) && !association.getAssociationType().equals("depends")) {
                        count++;
            
            out.write("\n");
            out.write("            <tr>\n");
            out.write("                <td>\n");
            out.write("                    ");
            out.print(association.getAssociationType());
            out.write("\n");
            out.write("                </td>\n");
            out.write("                <td>\n");
            out.write("                    ");
  int typeLen = association.getAssociationType().length();
                        String destPath = association.getDestinationPath();
                        String destLink = destPath;
                        String destPathSmall;
                        if (!destPath.startsWith("http://") && !destPath.startsWith("https://")) {
                            String temp = destPath;
                            try {
                                temp = URLEncoder.encode(destPath, "UTF-8");
                            } catch (Exception ignore) {}
                            destLink = "../resources/resource.jsp?region=region3&item=resource_browser_menu&viewType=std&path=" + temp;
                            destPathSmall = RegistryUtils.getResourceName(destPath);
                            if (destPathSmall == null) {
                                destPathSmall = destPath;
                            }
                        } else {
                            destPathSmall = destPath;
                        }
                        if (destPathSmall.length() >= 14) {
                            destPathSmall = destPathSmall.substring(0, 10) + "..";
                        }
                    
            out.write("\n");
            out.write("                    <a ");
if (destPath.startsWith("http://") || destPath.startsWith("https://")) {
            out.write("target=\"_blank\"");
}
            out.write(" href=\"");
            out.print(destLink);
            out.write("\" title=\"");
            out.print(destPath);
            out.write('"');
            out.write('>');
            out.print(destPathSmall);
            out.write("\n");
            out.write("                    </a>\n");
            out.write("                </td>\n");
            out.write("                ");
 if (bean.getLoggedIn() && bean.getPutAllowed() && !bean.getVersionView()) { 
            out.write("\n");
            out.write("                <td style=\"width:10px;\">\n");
            out.write("                    <a class=\"icon-link registryWriteOperation\" style=\"background-image:url(../admin/images/delete.gif);\"\n");
            out.write("                       onclick=\"removeAssociation('");
            out.print(bean.getPathWithVersion());
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(destPath);
            out.write('\'');
            out.write(',');
            out.write('\'');
            out.print(association.getAssociationType());
            out.write("','associationsDiv');\">\n");
            out.write("                        ");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                    </a>\n");
            out.write("                </td>\n");
            out.write("                ");
 } 
            out.write("\n");
            out.write("            </tr>\n");
            out.write("            ");

                    }
                }


            
            out.write("\n");
            out.write("            <tr>\n");
            out.write("                    ");
            out.write("\n");
            out.write("                <td align=\"left\" colspan=\"3\" style=\"height:0px;border-bottom:0px;\">\n");
            out.write("                </td>\n");
            out.write("            </tr>\n");
            out.write("        </tbody>\n");
            out.write("    </table>\n");
            out.write("    <table width=\"100%\" style=\"text-align:center; padding-top: 10px; margin-bottom: -10px\">\n");
            out.write("        ");
            //  carbon:resourcePaginator
            org.wso2.carbon.ui.taglibs.ResourcePaginator _jspx_th_carbon_005fresourcePaginator_005f1 = (org.wso2.carbon.ui.taglibs.ResourcePaginator) _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody.get(org.wso2.carbon.ui.taglibs.ResourcePaginator.class);
            boolean _jspx_th_carbon_005fresourcePaginator_005f1_reused = false;
            try {
              _jspx_th_carbon_005fresourcePaginator_005f1.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fresourcePaginator_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = pageNumber type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setPageNumber(pageNumber);
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = numberOfPages type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setNumberOfPages(numberOfPages);
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setResourceBundle("org.wso2.carbon.registry.relations.ui.i18n.Resources");
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = nextKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setNextKey("next");
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = prevKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setPrevKey("prev");
              // /relations/association-list-ajaxprocessor.jsp(327,8) name = paginationFunction type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fresourcePaginator_005f1.setPaginationFunction("loadAssociationDiv('" + request.getParameter("path").replaceAll("&","%26") + "', '" + request.getParameter("type") + "', {0})");
              int _jspx_eval_carbon_005fresourcePaginator_005f1 = _jspx_th_carbon_005fresourcePaginator_005f1.doStartTag();
              if (_jspx_th_carbon_005fresourcePaginator_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fresourcePaginator_0026_005fresourceBundle_005fprevKey_005fpaginationFunction_005fpageNumber_005fnumberOfPages_005fnextKey_005fnobody.reuse(_jspx_th_carbon_005fresourcePaginator_005f1);
              _jspx_th_carbon_005fresourcePaginator_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fresourcePaginator_005f1, _jsp_getInstanceManager(), _jspx_th_carbon_005fresourcePaginator_005f1_reused);
            }
            out.write("\n");
            out.write("    </table>\n");
            out.write("\n");
            out.write("    <div style=\"height:30px;\">\n");
            out.write("        <a class=\"icon-link\"\n");
            out.write("           style=\"background-image:url(../relations/images/asso-tree.gif);padding-left:30px;height:30px;margin-top:5px;\"\n");
            out.write("           onclick=\"showAssociationTree('asso', '");
            out.print(bean.getPathWithVersion());
            out.write("')\">\n");
            out.write("            ");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("    </div>\n");
            out.write("    ");
 } 
            out.write("\n");
            out.write("</div>\n");
            out.write("\n");
 } 
            out.write('\n');
            out.write('\n');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        _jspx_th_fmt_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fbundle_005f0_reused);
      }
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(111,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("path");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(115,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("actions");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(171,24) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(200,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("dependency.tree");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(242,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("type");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(245,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("path");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(249,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("actions");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(308,24) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("delete");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /relations/association-list-ajaxprocessor.jsp(337,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("association.tree");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }
}
